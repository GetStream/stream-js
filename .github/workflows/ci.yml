name: build

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [10, 12, 14]
        browser_tests: ['no']
        cloud_tests: ['no']
        run_linters: ['no']
        include:
          - browser_tests: 'no'
            cloud_tests: 'yes'
          - browser_tests: 'no'
            run_linters: 'yes'
          - browser_tests: 'yes'
    env:
      BROWSER_TESTS: 'no'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node }}

      - name: Cache Dependencies
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: ${{ runner.os }}-${{ matrix.node }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install Dependencies & Build
        run: yarn install --frozen-lockfile

      - name: Lint and Test with ${{ matrix.node }}
        env:
          STREAM_APP_ID: ${{ secrets.STREAM_APP_ID }}
          STREAM_API_KEY: ${{ secrets.STREAM_API_KEY }}
          STREAM_API_SECRET: ${{ secrets.STREAM_API_SECRET }}
          BROWSER_TESTS: ${{ matrix.browser_tests }}
          CLOUD_TESTS: ${{ matrix.cloud_tests }}
          RUN_LINTERS: ${{ matrix.run_linters }}
        run: |
          yarn run test-unit-node
          if [ "$CLOUD_TESTS" == "yes" ]; then yarn run test-cloud; fi
          if [ "$CLOUD_TESTS" == "yes" ]; then yarn run test-integration-node; fi
          if [ "$RUN_LINTERS" == "yes" ]; then yarn run lint; fi
          if [ "$RUN_LINTERS" == "yes" ]; then yarn run types; fi
          if [ "$RUN_LINTERS" == "yes" ]; then yarn run test-types; fi
          if [ "$BROWSER_TESTS" == "yes" ]; then yarn run test-browser; fi
